#logging:
#  pattern:
#    console: "%d - %msg%n"
#  file: var/log/tomcat/sell.log
#  level:
#    com.kevindeemo.LoggerTest : debug
##  level: debug
#  path: var/log/tomcat/

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: 123456
    url: jdbc:mysql://192.168.1.188/sell?characterEncoding=utf-8&useSSL=false
  jpa:
    show-sql: true
  #  jackson是spring-boot的web/webflux框架默认依赖的json库，
  #  所以依赖引入web即可实现jackson的自动化配置
  jackson:
    #   全局定义：value为null时被过滤，不返回
    default-property-inclusion: non_null
  redis:
    host: 192.168.1.188
    port: 6379
server:
  context-path: /sell

wechat:
  myAuthorizeAppId: ######
  myAuthorizeAppSecret: ######

  mpAppId: ######
  mpAppSecret: ######

  openAppId: ######
  openAppSecret: ######

  mchId: 1483469312
  mchKey: 098F6BCD4621D373CADE4E832627B4F6
  #  退款证书
  keyPath: ######
  notifyUrl: http://kevinsell.nat300.top/sell/pay/notify

  templateId:
    orderStatus: agE_ISeBkrCn8x4ouWfJjP5CThcMIBYikkcI

projectUrl:
  wechatMpAuthorize: http://kevinsell.nat300.top
  wechatOpenAuthorize: http://kevinsell.nat300.top
  sell: http://kevinsell.nat300.top
  #  sell: 192.168.1.171:8080
  fixedUrl: https://open.weixin.qq.com/connect/qrconnect?appid=wx6ad144e54af67d87&redirect_uri=http%3A%2F%2Fsell.springboot.cn%2Fsell%2Fqr%2FoTgZpwes1yqGU7r8MS1dbMYwQsuE&response_type=code&scope=snsapi_login&state=http%3a%2f%2fkevinsell.nat300.top%2fsell%2fwechat%2fqrUserInfo

# 打印mybatis的sql语句
logging:
  level:
    com:
      kevindeemo:
        dataobject:
          mapper: trace

mybatis:
  mapper-locations: classpath:mapper/*.xml
